on:
  push:
    # Sequence of patterns matched against refs/tags
    tags: [ '*' ]

name: Publish linkctl

jobs:
  build:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Set up go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Check out
        uses: actions/checkout@v2

      - name: Set version
        id: version
        run: echo "::set-output name=tag::$(git describe --tag)"

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: |
            go build -v -ldflags="-X 'main.Version=${{ steps.version.outputs.tag }}'" .
            tar zcvf "linkctl-${{ steps.version.outputs.tag }}.tar.gz" linkctl

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload linkctl
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./linkctl-${{ steps.version.outputs.tag }}.tar.gz"
          asset_name: "linkctl-${{ steps.version.outputs.tag }}.tar.gz"
          asset_content_type: application/octet-stream
